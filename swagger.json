{
    "swagger": "2.0",
    "host": "your.http.server",
    "basePath": "/",
    "info": {
        "version": "1.1",
        "title": "2IMN20 Practical API",
        "description": ""
    },
    "tags": [
        {
            "name": "Building Manager",
            "description": "http server (runs on any computer)"
        },
        {
            "name": "Vehicle",
            "description": "http server (runs on any computer)"
        }
    ],
    "paths": {
        "/MANAGER_IP/parking_spots": {
            "get": {
                "tags": [
                    "Building Manager"
                ],
                "description": "Gets `ParkingSpot` objects.\nOptional query param of **state** allows us to filter on free|reserved|occupied parking spots.\n",
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State of the returned parking spots",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "free",
                            "reserved",
                            "occupied"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "ParkingSpots",
                            "type": "array",
                            "items": {
                                "title": "ParkingSpot",
                                "$ref": "#/definitions/ParkingSpot"
                            }
                        }
                    }
                }
            }
        },
        "/MANAGER_IP/parking_spots/{parkingSpotId}": {
            "get": {
                "tags": [
                    "Manager"
                ],
                "description": "Gets a particular `ParkingSpot` object.\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "ParkingSpot",
                            "type": "object",
                            "$ref": "#/definitions/ParkingSpot"
                        }
                    }
                }
            }
        },
        "/MANAGER_IP/parking_spots/{parkingSpotId}/reservations": {
            "post": {
                "tags": [
                    "Manager"
                ],
                "description": "Create a reservation. Manager has to set the vehicleId and reservationId itself for security reasons. Although the 201/401 CoAP response header is sufficient as a response, we also return a JSON object that reflects this information (helpful for debugging).\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "vehicleId",
                        "in": "formData",
                        "type": "string",
                        "description": "vehicle license plate number",
                        "required": true
                    },
                    {
                        "name": "from",
                        "in": "formData",
                        "description": "Start time of reservation",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "to",
                        "in": "formData",
                        "description": "End time of reservation",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful reservation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer"
                                },
                                "statusMessage": {
                                    "type": "string"
                                },
                                "reservationId": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "There was a time conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/MANAGER_IP/parking_spots/{parkingSpotId}/reservations/{reservationId}": {
            "delete": {
                "tags": [
                    "Manager"
                ],
                "description": "Delete the reservation. \n \n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "reservationId",
                        "in": "path",
                        "description": "Reservation ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "Set User Account": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Register User account details\n",
                "parameters": [
                    {
                        "name": "UserID",
                        "in": "formData",
                        "description": "User ID of the office worker in the form Office-Worker-GroupNo. Ex- Office-Worker-25",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "GroupNo",
                        "in": "formData",
                        "description": "Group Number the office worker Ex- 25",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "RoomID",
                        "in": "formData",
                        "description": "Room ID for the office worker in the form Room-No. Ex- Room-1",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "Name",
                        "in": "formData",
                        "description": "Name of the user in the form Last Name, First Name. Ex- Rahman,L.F.",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "UserID",
                        "in": "formData",
                        "description": "User ID of the office worker in the form Office-Worker-GroupNo. Ex- Office-Worker-25",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "Email",
                        "in": "formData",
                        "description": "Email ID of the user. Ex- L.F.Rahman@tue.nl",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "Password",
                        "in": "formData",
                        "description": "Password of the user in the form pwd-GroupNo. Ex- pwd-25",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User Registered",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusCode": {
                                    "type": "integer"
                                },
                                "statusMessage": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ParkingSpot": {
            "type": "object",
            "properties": {
                "parkingSpotId": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "free",
                        "reserved",
                        "occupied"
                    ]
                },
                "price": {
                    "type": "integer",
                    "description": "in cents"
                },
                "reservations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Reservation"
                    }
                },
                "occupancies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Occupancy"
                    }
                }
            }
        },
        "Reservation": {
            "type": "object",
            "description": "Each parking spot can have many reservations.",
            "properties": {
                "reservationId": {
                    "type": "string",
                    "description": "Id of the reservation"
                },
                "vehicleId": {
                    "type": "string",
                    "description": "Id of the vehicle that either reserved the spot. This attribute is present in the output only if the client is \"admin\" (e.g. Visualization Service) or vehicleId is the same as the Vehicle making the query."
                },
                "from": {
                    "type": "number",
                    "description": "Start time (unix timestamp) of reservation."
                },
                "to": {
                    "type": "number",
                    "description": "Start time (unix timestamp) of reservation."
                }
            }
        },
        "Occupancy": {
            "type": "object",
            "description": "Each parking spot can have many occupancies (when the parking spot had state \"occupied\").",
            "properties": {
                "vehicleId": {
                    "type": "string",
                    "description": "Id of the vehicle that either reserved the spot. This attribute is present in the output only if the client is \"admin\" (e.g. Visualization Service) or vehicleId is the same as the Vehicle making the query."
                },
                "from": {
                    "type": "number",
                    "description": "Start time (unix timestamp) of reservation."
                },
                "to": {
                    "type": "number",
                    "description": "Start time (unix timestamp) of reservation."
                }
            }
        },
        "Response": {
            "properties": {
                "statusCode": {
                    "type": "integer"
                },
                "statusMessage": {
                    "type": "string"
                }
            }
        }
    }
}
